###################### NOTE #########################
# This file is managed by salt, do not edit locally #
# All changes will be overwritten by salt!          #
###################### NOTE #########################

################################################################################
# Diamond Configuration File
################################################################################

################################################################################
### Options for the server
[server]

# Handlers for published metrics.
handlers = diamond.handler.netuitive_cloud.NetuitiveHandler, diamond.handler.graphite.GraphiteHandler

# User diamond will run as
# Leave empty to use the current user
user =

# Group diamond will run as
# Leave empty to use the current group
group =

# Pid file
pid_file = /tmp/netuitive-agent.pid

# Directory to load collector modules from
collectors_path = /opt/netuitive-agent/collectors/
# Directory to load collector configs from
collectors_config_path = /opt/netuitive-agent/conf/collectors/

# Directory to load handler configs from
handlers_config_path = /opt/netuitive-agent/conf/handlers/

# Directory to load handler modules from
# handlers_path = /opt/netuitive-agent/handlers/

################################################################################
### Options for handlers
[handlers]

# daemon logging handler(s)
keys = rotated_file

### Defaults options for all Handlers
[[default]]


[[NetuitiveHandler]]

### NetuitiveCloud URL to post the metrics
url = http://spindlerdb.netuitive.com:20010/ingest/infrastructure

### NetuitiveClound Datasource api key
api_key = fdb2557e136c022f4c37bb48f16129d1

### Uncomment to add tags
tags = tag1:tag1val, tag2:tag2val

# How many samples to store before sending to Netuitive
batch = 100

# how many batches to store before trimming
max_backlog_multiplier = 5

# Trim down how many batches
trim_backlog_multiplier = 4


[[[statsd]]]
interval = 10
# listen_port = 8125
# listen_ip = 127.0.0.1
# element_type = SERVER
# prefix = statsd
# forward_ip = 127.0.0.2
# forward_port = 8125
# forward_enabled = True


[[GraphiteHandler]]
host = sensu.uat.netuitive.com
port = 2003
timeout = 15
batch = 1


################################################################################
### Options for collectors
[collectors]

[[default]]
### Defaults options for all Collectors

# Uncomment and set to hardcode a hostname for the collector path
# Keep in mind, periods are seperators in graphite

# If you prefer to just use a different way of calculating the hostname
# Uncomment and set this to one of these values:

# smart             = Default. Tries fqdn_short. If that's localhost, uses hostname_short

# fqdn_short        = Default. Similar to hostname -s
# fqdn              = hostname output
# fqdn_rev          = hostname in reverse (com.example.www)

# uname_short       = Similar to uname -n, but only the first part
# uname_rev         = uname -r in reverse (com.example.www)

# hostname_short    = `hostname -s`
# hostname          = `hostname`
# hostname_rev      = `hostname` in reverse (com.example.www)

# shell             = Run the string set in hostname as a shell command and use its
#                     output(with spaces trimmed off from both ends) as the hostname.

# hostname_method = smart

hostname = statsdtest02

# Path Prefix and Suffix
# you can use one or both to craft the path where you want to put metrics
# such as: %(path_prefix)s.$(hostname)s.$(path_suffix)s.$(metric)s
# path_prefix = servers
# path_suffix =

# Path Prefix for Virtual Machines
# If the host supports virtual machines, collectors may report per
# VM metrics. Following OpenStack nomenclature, the prefix for
# reporting per VM metrics is "instances", and metric foo for VM
# bar will be reported as: instances.bar.foo...
# instance_prefix = instances

# Default Poll Interval (seconds)
interval = 60


splay = 1
method = threading
path_prefix = servers

[[CPUCollector]]
enabled = True

[[DiskSpaceCollector]]
enabled = True
# exclude everything that begins /boot or /mnt
exclude_filters = ^/boot, ^/mnt

[[DiskUsageCollector]]
enabled = True

[[LoadAverageCollector]]
enabled = True

[[MemoryCollector]]
enabled = True

[[VMStatCollector]]
enabled = True

[[NetworkCollector]]
enabled = True

[[NtpdCollector]]
enabled = True

[[UptimeCollector]]
enabled = True

[[EntropyStatCollector]]
enabled = True

[[ProcessStatCollector]]
enabled = True

[[UsersCollector]]
enabled = True

[[NginxCollector]]
enabled = True
req_host = localhost
req_port = 80
req_path = /nginx_status

[[ProcessResourcesCollector]]
enabled = True

[[[process]]]

[[[[nginx]]]]
name = "^nginx"
count_workers = True

[[[[salt-master]]]]
name = "salt-master"
count_workers = True

[[[[diamond]]]]
selfmon=True
count_workers = True

[[ZookeeperCollector]]
enabled = True


################################################################################
### Options for logging
# for more information on file format syntax:
# http://docs.python.org/library/logging.config.html#configuration-file-format

[loggers]

keys = root

# handlers are higher in this config file, in:
# [handlers]
# keys = ...

[formatters]

keys = default

[logger_root]

# to increase verbosity, set DEBUG
level = INFO
handlers = rotated_file
propagate = 1

[handler_rotated_file]

class = handlers.TimedRotatingFileHandler
level = DEBUG
formatter = default
# rotate at midnight, each day and keep 7 days
args = ('/vagrant/diamond.log', 'midnight', 1, 7)

[formatter_default]

format = [%(asctime)s] [%(threadName)s] %(message)s
datefmt =

################################################################################
### Options for config merging
# [configs]
# path = "/etc/diamond/configs/"
# extension = ".conf"
#-------------------------------------------------------------------------------
# Example:
# /etc/diamond/configs/net.conf
# [collectors]
#
